// Test du syst√®me de dimensions d'images
// Ex√©cuter avec : node test-image-dimensions.js

const testImageDimensions = async () => {
  console.log('üß™ Test du syst√®me de dimensions d\'images...\n');

  // Test 1: V√©rifier l'API
  try {
    console.log('üì° Test 1: V√©rification de l\'API /api/image-dimensions');
    const response = await fetch('http://localhost:3000/api/image-dimensions');
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ API accessible, donn√©es r√©cup√©r√©es:', data.length, 'entr√©es');
    } else {
      console.log('‚ùå API inaccessible, status:', response.status);
    }
  } catch (error) {
    console.log('‚ùå Erreur API:', error.message);
  }

  // Test 2: V√©rifier la base de donn√©es
  try {
    console.log('\nüóÑÔ∏è Test 2: V√©rification de la table image_dimensions');
    const response = await fetch('http://localhost:3000/api/image-dimensions?blockId=1');
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Table accessible, dimensions pour bloc 1:', data.length, 'entr√©es');
      if (data.length > 0) {
        console.log('üìä Exemple de donn√©es:', data[0]);
      }
    } else {
      console.log('‚ùå Table inaccessible, status:', response.status);
    }
  } catch (error) {
    console.log('‚ùå Erreur table:', error.message);
  }

  // Test 3: V√©rifier la cr√©ation de dimensions
  try {
    console.log('\n‚ûï Test 3: Test de cr√©ation de dimensions');
    const testData = {
      block_id: 999,
      image_url: '/test/image.jpg',
      image_name: 'Test Image',
      width: 400,
      height: 300,
      original_width: 800,
      original_height: 600
    };

    const response = await fetch('http://localhost:3000/api/image-dimensions', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(testData)
    });

    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ Cr√©ation r√©ussie:', result);
      
      // Nettoyer le test
      await fetch(`http://localhost:3000/api/image-dimensions?blockId=999&imageUrl=${encodeURIComponent('/test/image.jpg')}`, {
        method: 'DELETE'
      });
      console.log('üßπ Test nettoy√©');
    } else {
      console.log('‚ùå Cr√©ation √©chou√©e, status:', response.status);
    }
  } catch (error) {
    console.log('‚ùå Erreur cr√©ation:', error.message);
  }

  console.log('\nüéØ R√©sum√© des tests termin√© !');
  console.log('üìã V√©rifiez que :');
  console.log('   - L\'application fonctionne sur localhost:3000');
  console.log('   - La base de donn√©es est accessible');
  console.log('   - Les tables sont cr√©√©es');
};

// Ex√©cuter les tests si le script est appel√© directement
if (require.main === module) {
  testImageDimensions().catch(console.error);
}

module.exports = { testImageDimensions };
