üîç ANALYSE TECHNIQUE COMPL√àTE DE L'√âDITEUR DE TEXTE
==================================================

Technologies utilis√©es :
- React 18 avec TypeScript
- Next.js 14.0.0 
- contentEditable HTML5 (pas d'√©diteur riche externe)
- CSS Modules + CSS Global
- React DnD pour le drag & drop
- React Resizable pour le redimensionnement

Architecture de l'√©diteur :
```typescript
// √âl√©ment principal : div contentEditable
<div
  contentEditable
  dir="ltr"
  onInput={handleContentChange}
  style={{
    direction: 'ltr',
    textAlign: 'left',
    unicodeBidi: 'embed',
  }}
  dangerouslySetInnerHTML={{ __html: localContent }}
/>
```

üö® PROBL√àMES IDENTIFI√âS :

1. Conflit CSS Global vs Inline
```css
/* globals.css - Ligne 150-170 */
[contenteditable][dir="ltr"] {
  direction: ltr !important;
  text-align: left !important;
}

/* Plus sp√©cifique */
[data-block-id] [contenteditable][dir="ltr"] {
  direction: ltr !important;
  text-align: left !important;
  unicode-bidi: embed !important;
  writing-mode: horizontal-tb !important;
}
```

2. Gestion des √©v√©nements de composition
```typescript
// EditableBlock.tsx - Ligne 538
const handleContentChange = (e: React.FormEvent<HTMLDivElement>) => {
  const newContent = e.currentTarget.innerHTML;
  setLocalContent(newContent);
  debouncedSave({ content: newContent });
};
```

3. Nettoyage HTML agressif
```typescript
// EditableBlock.tsx - Ligne 200-210
const cleanContent = updatedBlock.content
  .replace(/dir\s*=\s*["']rtl["']/gi, 'dir="ltr"')
  .replace(/style\s*=\s*["'][^"']*direction\s*:\s*rtl[^"']*["']/gi, '')
  .replace(/unicode-bidi\s*=\s*bidi-override/gi, '');
```

4. Synchronisation contentEditable
```typescript
// Probl√®me potentiel : innerHTML vs textContent
dangerouslySetInnerHTML={{ __html: localContent }}
```

üõ†Ô∏è SOLUTIONS RECOMMAND√âES :

Solution 1 : Forcer la direction au niveau DOM
```typescript
useEffect(() => {
  if (contentRef.current) {
    const element = contentRef.current;
    element.style.direction = 'ltr';
    element.style.textAlign = 'left';
    element.style.unicodeBidi = 'embed';
    element.setAttribute('dir', 'ltr');
  }
}, []);
```

Solution 2 : Gestionnaire d'√©v√©nements de composition
```typescript
const handleCompositionStart = (e: React.CompositionEvent) => {
  const target = e.currentTarget;
  target.style.direction = 'ltr';
  target.style.textAlign = 'left';
};

const handleCompositionEnd = (e: React.CompositionEvent) => {
  const target = e.currentTarget;
  target.style.direction = 'ltr';
  target.style.textAlign = 'left';
};
```

Solution 3 : CSS plus sp√©cifique
```css
/* Forcer LTR sur TOUS les √©l√©ments enfants */
[contenteditable][dir="ltr"] *,
[contenteditable][dir="ltr"] div,
[contenteditable][dir="ltr"] span,
[contenteditable][dir="ltr"] p,
[contenteditable][dir="ltr"] br {
  direction: ltr !important;
  text-align: left !important;
  unicode-bidi: embed !important;
  writing-mode: horizontal-tb !important;
}
```

Solution 4 : MutationObserver pour surveiller les changements
```typescript
useEffect(() => {
  if (!contentRef.current) return;
  
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'childList') {
        mutation.addedNodes.forEach((node) => {
          if (node.nodeType === Node.ELEMENT_NODE) {
            const element = node as HTMLElement;
            element.style.direction = 'ltr';
            element.style.textAlign = 'left';
          }
        });
      }
    });
  });
  
  observer.observe(contentRef.current, {
    childList: true,
    subtree: true,
    attributes: true,
    attributeFilter: ['style', 'dir']
  });
  
  return () => observer.disconnect();
}, []);
```

üéØ RECOMMANDATION IMM√âDIATE :

Le probl√®me vient probablement de la gestion des √©v√©nements de composition (IME - Input Method Editor) et de la synchronisation entre innerHTML et les styles CSS.

FICHIERS ANALYS√âS :
- src/components/EditableBlock.tsx (1115 lignes)
- src/styles/globals.css (812 lignes)
- src/components/Sidebar.module.css (364 lignes)
- next.config.js
- tsconfig.json
- package.json

D√âPENDANCES CL√âS :
- React 18
- Next.js 14.0.0
- TypeScript 5
- react-dnd 16.0.1
- react-resizable 3.0.5
- pg 8.16.3 (PostgreSQL)

DATE D'ANALYSE : 11 ao√ªt 2025
VERSION ANALYS√âE : Commit 450e6dc (version stable avant Quill)

